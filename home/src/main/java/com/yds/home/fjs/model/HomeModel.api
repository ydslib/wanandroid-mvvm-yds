package com.yds.home.fjs.model

import androidx.room.*
import com.yds.home.fjs.convert.ArticleModelConvert
import com.yds.home.fjs.convert.BannerItemConvert
import com.yds.home.fjs.convert.BaseArticleTypeConvert


@Entity(tableName = "articleModel")
@TypeConverters(value = [BaseArticleTypeConvert::class])
data class ArticleModel(
    @PrimaryKey
    var curPage: Int,
    var datas: MutableList<BaseArticle>? = null,
    var offset: Int? = null,
    var over: Boolean? = null,
    var pageCount: Int? = null,
    var size: Int? = null,
    var total: Int? = null
) {
    constructor() : this(curPage = 0)
}

@Entity(tableName = "baseArticle")
data class BaseArticle(
    @Ignore
    val adminAdd: Boolean? = null,
    var apkLink: String? = null,
    var audit: Int? = null,
    var author: String? = null,
    var canEdit: Boolean? = null,
    var chapterId: Int? = null,
    var chapterName: String? = null,
    var collect: Boolean? = null,
    var courseId: Int? = null,
    var desc: String? = null,
    var descMd: String? = null,
    var envelopePic: String? = null,
    var fresh: Boolean? = null,
    var host: String? = null,
    @PrimaryKey
    var id: Int,
    @Ignore
    var isAdminAdd: Boolean? = null,
    var link: String? = null,
    var niceDate: String? = null,
    var niceShareDate: String? = null,
    var origin: String? = null,
    var prefix: String? = null,
    var projectLink: String? = null,
    var publishTime: Long? = null,
    var realSuperChapterId: Int? = null,
    var route: Boolean? = null,
    var selfVisible: Int? = null,
    var shareDate: Long? = null,
    var shareUser: String? = null,
    var superChapterId: Int? = null,
    var superChapterName: String? = null,
    var title: String? = null,
    var type: Int? = null,
    var userId: Int? = null,
    var visible: Int? = null,
    var zan: Int? = null,
) {
    constructor() : this(id = 0)
}

@Entity(tableName = "bannerItem")
data class BannerItemData(
    var desc: String? = null,
    @PrimaryKey
    var id: Int,
    var imagePath: String? = null,
    var isVisible: Int? = null,
    var order: Int? = null,
    var title: String? = null,
    var type: Int? = null,
    var url: String? = null
){
    constructor():this(id=0)
}

@Entity(tableName = "homeModel")
@TypeConverters(value = [BannerItemConvert::class, ArticleModelConvert::class])
data class HomeModel(
    @PrimaryKey(autoGenerate = true)
    var id: Int = 0,
    var articleModel: ArticleModel? = null,
    var banner: List<BannerItemData>? = null
)